import {
  mjdToUTCString,
} from '../../../utility/time';

export default {
  lg: [
    {
      i: 'satellite-neutron1-epsr-aa',
      x: 0,
      y: 0,
      w: 2,
      h: 9,
      component: {
        name: 'Image',
        props: {
          node: 'neutron1',
          name: 'EPS Range',
          file: 'EPS-Range.png',
        },
      },
    },
    {
      i: 'satellite-neutron1-epsr-a',
      x: 2,
      y: 0,
      w: 2,
      h: 9,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Temperature',
          displayValues: [
            {
              name: 'Motherboard',
              nodeProcess: 'any',
              dataKey: 'device_batt_temp_000',
              timeDataKey: 'device_batt_utc_000',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsr-abc',
      x: 4,
      y: 0,
      w: 2,
      h: 9,
      component: {
        name: 'DisplayValue',
        props: {
          name: '3V Bus',
          displayValues: [
            {
              name: 'Current',
              nodeProcess: 'any',
              dataKey: 'device_bus_amp_000',
              timeDataKey: 'device_batt_utc_000',
              unit: 'A',
              processDataKey: (x) => x.toFixed(4),
              live: true,
            },
            {
              name: 'Voltage',
              nodeProcess: 'any',
              dataKey: 'device_bus_volt_000',
              timeDataKey: 'device_batt_utc_000',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsr-b',
      x: 6,
      y: 0,
      w: 2,
      h: 9,
      component: {
        name: 'DisplayValue',
        props: {
          name: '5V Bus',
          displayValues: [
            {
              name: 'Current',
              nodeProcess: 'any',
              dataKey: 'device_bus_amp_001',
              timeDataKey: 'device_bus_utc_001',
              unit: 'A',
              processDataKey: (x) => x.toFixed(4),
              live: true,
            },
            {
              name: 'Voltage',
              nodeProcess: 'any',
              dataKey: 'device_bus_volt_001',
              timeDataKey: 'device_bus_utc_001',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsr-c',
      x: 8,
      y: 0,
      w: 2,
      h: 9,
      component: {
        name: 'DisplayValue',
        props: {
          name: '12V Bus',
          displayValues: [
            {
              name: 'Current',
              nodeProcess: 'any',
              dataKey: 'device_bus_amp_002',
              timeDataKey: 'device_bus_utc_002',
              unit: 'A',
              processDataKey: (x) => x.toFixed(4),
              live: true,
            },
            {
              name: 'Voltage',
              nodeProcess: 'any',
              dataKey: 'device_bus_volt_002',
              timeDataKey: 'device_bus_utc_002',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsr-d',
      x: 10,
      y: 0,
      w: 2,
      h: 9,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Vbat Bus',
          displayValues: [
            {
              name: 'Current',
              nodeProcess: 'any',
              dataKey: 'device_bus_amp_003',
              timeDataKey: 'device_bus_utc_003',
              unit: 'A',
              processDataKey: (x) => x.toFixed(4),
              live: true,
            },
            {
              name: 'Voltage',
              nodeProcess: 'any',
              dataKey: 'device_bus_volt_003',
              timeDataKey: 'device_bus_utc_003',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsrange-e',
      x: 0,
      y: 1,
      w: 6,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS Bus Current',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Amp 000 (A)',
              YDataKey: 'device_bus_amp_000',
              timeDataKey: 'device_bus_utc_000',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'orange',
              },
              name: 'Amp 001 (A)',
              YDataKey: 'device_bus_amp_001',
              timeDataKey: 'device_bus_utc_001',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'blue',
              },
              name: 'Amp 002 (A)',
              YDataKey: 'device_bus_amp_002',
              timeDataKey: 'device_bus_utc_002',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'gray',
              },
              name: '12V Amperage (A)',
              YDataKey: 'device_bus_amp_003',
              timeDataKey: 'device_bus_utc_003',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsrange-f',
      x: 6,
      y: 1,
      w: 6,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS Bus Voltage',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Volt 000 (V)',
              YDataKey: 'device_bus_volt_000',
              timeDataKey: 'device_bus_utc_000',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'orange',
              },
              name: 'Volt 001 (V)',
              YDataKey: 'device_bus_volt_001',
              timeDataKey: 'device_bus_utc_001',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'blue',
              },
              name: 'Volt 002 (V)',
              YDataKey: 'device_bus_volt_002',
              timeDataKey: 'device_bus_utc_002',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'gray',
              },
              name: 'Volt 003 (V)',
              YDataKey: 'device_bus_volt_003',
              timeDataKey: 'device_bus_utc_003',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsr-g',
      x: 0,
      y: 17,
      w: 4,
      h: 10,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Switch Currents',
          displayValues: [
            {
              name: 'Switch 000',
              nodeProcess: 'any',
              dataKey: 'device_swch_amp_000',
              timeDataKey: 'device_swch_utc_000',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
            {
              name: 'Switch 001',
              nodeProcess: 'any',
              dataKey: 'device_swch_amp_001',
              timeDataKey: 'device_swch_utc_001',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
            {
              name: 'Switch 002',
              nodeProcess: 'any',
              dataKey: 'device_swch_amp_002',
              timeDataKey: 'device_swch_utc_002',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
            {
              name: 'Switch 003',
              nodeProcess: 'any',
              dataKey: 'device_swch_amp_003',
              timeDataKey: 'device_swch_utc_003',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
            {
              name: 'Switch 004',
              nodeProcess: 'any',
              dataKey: 'device_swch_amp_004',
              timeDataKey: 'device_swch_utc_004',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
            {
              name: 'Switch 005',
              nodeProcess: 'any',
              dataKey: 'device_swch_amp_005',
              timeDataKey: 'device_swch_utc_005',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
            {
              name: 'Switch 006',
              nodeProcess: 'any',
              dataKey: 'device_swch_amp_006',
              timeDataKey: 'device_swch_utc_006',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
            {
              name: 'Switch 007',
              nodeProcess: 'any',
              dataKey: 'device_swch_amp_007',
              timeDataKey: 'device_swch_utc_007',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
            {
              name: 'Switch 008',
              nodeProcess: 'any',
              dataKey: 'device_swch_amp_008',
              timeDataKey: 'device_swch_utc_008',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
            {
              name: 'Switch 009',
              nodeProcess: 'any',
              dataKey: 'device_swch_amp_009',
              timeDataKey: 'device_swch_utc_009',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsr-h',
      x: 4,
      y: 17,
      w: 4,
      h: 10,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Switch Voltages',
          displayValues: [
            {
              name: 'Switch 000',
              nodeProcess: 'any',
              dataKey: 'device_swch_volt_000',
              timeDataKey: 'device_swch_utc_000',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
            {
              name: 'Switch 001',
              nodeProcess: 'any',
              dataKey: 'device_swch_volt_001',
              timeDataKey: 'device_swch_utc_001',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
            {
              name: 'Switch 002',
              nodeProcess: 'any',
              dataKey: 'device_swch_volt_002',
              timeDataKey: 'device_swch_utc_002',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
            {
              name: 'Switch 003',
              nodeProcess: 'any',
              dataKey: 'device_swch_volt_003',
              timeDataKey: 'device_swch_utc_003',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
            {
              name: 'Switch 004',
              nodeProcess: 'any',
              dataKey: 'device_swch_volt_004',
              timeDataKey: 'device_swch_utc_004',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
            {
              name: 'Switch 005',
              nodeProcess: 'any',
              dataKey: 'device_swch_volt_005',
              timeDataKey: 'device_swch_utc_005',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
            {
              name: 'Switch 006',
              nodeProcess: 'any',
              dataKey: 'device_swch_volt_006',
              timeDataKey: 'device_swch_utc_006',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
            {
              name: 'Switch 007',
              nodeProcess: 'any',
              dataKey: 'device_swch_volt_007',
              timeDataKey: 'device_swch_utc_007',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
            {
              name: 'Switch 008',
              nodeProcess: 'any',
              dataKey: 'device_swch_volt_008',
              timeDataKey: 'device_swch_utc_008',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
            {
              name: 'Switch 009',
              nodeProcess: 'any',
              dataKey: 'device_swch_volt_009',
              timeDataKey: 'device_swch_utc_009',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsr-hi',
      x: 8,
      y: 17,
      w: 4,
      h: 10,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Switch Pwrs',
          displayValues: [
            {
              name: 'Switch 000',
              nodeProcess: 'any',
              dataKey: 'device_swch_power_000',
              timeDataKey: 'device_swch_utc_000',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
              live: true,
            },
            {
              name: 'Switch 001',
              nodeProcess: 'any',
              dataKey: 'device_swch_power_001',
              timeDataKey: 'device_swch_utc_001',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
              live: true,
            },
            {
              name: 'Switch 002',
              nodeProcess: 'any',
              dataKey: 'device_swch_power_002',
              timeDataKey: 'device_swch_utc_002',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
              live: true,
            },
            {
              name: 'Switch 003',
              nodeProcess: 'any',
              dataKey: 'device_swch_power_003',
              timeDataKey: 'device_swch_utc_003',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
              live: true,
            },
            {
              name: 'Switch 004',
              nodeProcess: 'any',
              dataKey: 'device_swch_power_004',
              timeDataKey: 'device_swch_utc_004',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
              live: true,
            },
            {
              name: 'Switch 005',
              nodeProcess: 'any',
              dataKey: 'device_swch_power_005',
              timeDataKey: 'device_swch_utc_005',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
              live: true,
            },
            {
              name: 'Switch 006',
              nodeProcess: 'any',
              dataKey: 'device_swch_power_006',
              timeDataKey: 'device_swch_utc_006',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
              live: true,
            },
            {
              name: 'Switch 007',
              nodeProcess: 'any',
              dataKey: 'device_swch_power_007',
              timeDataKey: 'device_swch_utc_007',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
              live: true,
            },
            {
              name: 'Switch 008',
              nodeProcess: 'any',
              dataKey: 'device_swch_power_008',
              timeDataKey: 'device_swch_utc_008',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
              live: true,
            },
            {
              name: 'Switch 009',
              nodeProcess: 'any',
              dataKey: 'device_swch_power_009',
              timeDataKey: 'device_swch_utc_009',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsrange-i',
      x: 0,
      y: 18,
      w: 6,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS PDM Switch Amp',
          XDataKey: 'node_utc',
          processXDataKey: (x) => mjdToUTCString(x),
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'darkseagreen',
              },
              name: 'Amp 000 (A)',
              YDataKey: 'device_swch_amp_000',
              timeDataKey: 'device_swch_utc_000',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'blue',
              },
              name: 'Amp 001 (A)',
              YDataKey: 'device_swch_amp_001',
              timeDataKey: 'device_swch_utc_001',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'orange',
              },
              name: 'Amp 002 (A)',
              YDataKey: 'device_swch_amp_002',
              timeDataKey: 'device_swch_utc_002',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'green',
              },
              name: 'Amp 003 (A)',
              YDataKey: 'device_swch_amp_003',
              timeDataKey: 'device_swch_utc_003',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'brown',
              },
              name: 'Amp 004 (A)',
              YDataKey: 'device_swch_amp_004',
              timeDataKey: 'device_swch_utc_004',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'purple',
              },
              name: 'Amp 005 (A)',
              YDataKey: 'device_swch_amp_005',
              timeDataKey: 'device_swch_utc_005',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Amp 006 (A)',
              YDataKey: 'device_swch_amp_006',
              timeDataKey: 'device_swch_utc_006',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'black',
              },
              name: 'Amp 007 (A)',
              YDataKey: 'device_swch_amp_007',
              timeDataKey: 'device_swch_utc_007',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'pink',
              },
              name: 'Amp 008 (A)',
              YDataKey: 'device_swch_amp_008',
              timeDataKey: 'device_swch_utc_008',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'cyan',
              },
              name: 'Amp 009 (A)',
              YDataKey: 'device_swch_amp_009',
              timeDataKey: 'device_swch_utc_009',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsrange-j',
      x: 6,
      y: 18,
      w: 6,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS PDM Switch Voltage',
          XDataKey: 'node_utc',
          processXDataKey: (x) => mjdToUTCString(x),
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'darkseagreen',
              },
              name: 'Volt 000 (V)',
              YDataKey: 'device_swch_volt_000',
              timeDataKey: 'device_swch_utc_000',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'blue',
              },
              name: 'Volt 001 (V)',
              YDataKey: 'device_swch_volt_001',
              timeDataKey: 'device_swch_utc_001',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'orange',
              },
              name: 'Volt 002 (V)',
              YDataKey: 'device_swch_volt_002',
              timeDataKey: 'device_swch_utc_002',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'green',
              },
              name: 'Volt 003 (V)',
              YDataKey: 'device_swch_volt_003',
              timeDataKey: 'device_swch_utc_003',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'brown',
              },
              name: 'Volt 004 (V)',
              YDataKey: 'device_swch_volt_004',
              timeDataKey: 'device_swch_utc_004',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'purple',
              },
              name: 'Volt 005 (V)',
              YDataKey: 'device_swch_volt_005',
              timeDataKey: 'device_swch_utc_005',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Volt 006 (V)',
              YDataKey: 'device_swch_volt_006',
              timeDataKey: 'device_swch_utc_006',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'black',
              },
              name: 'Volt 007 (V)',
              YDataKey: 'device_swch_volt_007',
              timeDataKey: 'device_swch_utc_007',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'pink',
              },
              name: 'Volt 008 (V)',
              YDataKey: 'device_swch_volt_008',
              timeDataKey: 'device_swch_utc_008',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'cyan',
              },
              name: 'Volt 009 (V)',
              YDataKey: 'device_swch_volt_009',
              timeDataKey: 'device_swch_utc_009',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsrange-ia',
      x: 0,
      y: 19,
      w: 12,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS PDM Switch Pwr',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'darkseagreen',
              },
              name: 'Pwr 000 (W)',
              YDataKey: 'device_swch_power_000',
              timeDataKey: 'device_swch_utc_000',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'blue',
              },
              name: 'Pwr 001 (W)',
              YDataKey: 'device_swch_power_001',
              timeDataKey: 'device_swch_utc_001',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'orange',
              },
              name: 'Pwr 002 (W)',
              YDataKey: 'device_swch_power_002',
              timeDataKey: 'device_swch_utc_0002',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'green',
              },
              name: 'Pwr 003 (W)',
              YDataKey: 'device_swch_power_003',
              timeDataKey: 'device_swch_utc_003',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'brown',
              },
              name: 'Pwr 004 (W)',
              YDataKey: 'device_swch_power_004',
              timeDataKey: 'device_swch_utc_004',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'purple',
              },
              name: 'Pwr 005 (W)',
              YDataKey: 'device_swch_power_005',
              timeDataKey: 'device_swch_utc_005',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Pwr 006 (W)',
              YDataKey: 'device_swch_power_006',
              timeDataKey: 'device_swch_utc_006',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'black',
              },
              name: 'Pwr 007 (W)',
              YDataKey: 'device_swch_power_007',
              timeDataKey: 'device_swch_utc_007',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'pink',
              },
              name: 'Pwr 008 (W)',
              YDataKey: 'device_swch_power_008',
              timeDataKey: 'device_swch_utc_008',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'cyan',
              },
              name: 'Pwr 009 (W)',
              YDataKey: 'device_swch_power_009',
              timeDataKey: 'device_swch_utc_009',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
  ],
};
