import { mjdToUTCString, secondsToMinute } from '../../../utility/time';
import {
  powerMode,
} from '../../../utility/definition';

export default {
  lg: [
    {
      i: 'satellite-neutron1-aa',
      x: 0,
      y: 0,
      w: 3,
      h: 14,
      component: {
        name: 'Image',
        props: {
          node: 'neutron1',
          name: 'Overview',
          file: 'Overview.png',
        },
      },
    },
    {
      i: 'satellite-neutron1-a',
      x: 3,
      y: 0,
      w: 3,
      h: 7,
      component: {
        name: 'AgentList',
      },
    },
    {
      i: 'satellite-neutron1-c',
      x: 6,
      y: 0,
      w: 3,
      h: 7,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'CPU',
          displayValues: [
            {
              name: 'BBB Load',
              nodeProcess: 'any',
              dataKey: 'device_cpu_load_000',
              dataKeyUpperThreshold: 1,
              timeDataKey: 'device_cpu_utc_000',
              unit: '',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'BBB Uptime',
              nodeProcess: 'any',
              dataKey: 'device_cpu_uptime_000',
              timeDataKey: 'device_cpu_utc_000',
              unit: '',
              processDataKey: (x) => x,
              processSecondaryData: (x) => secondsToMinute(x),
            },
            {
              name: 'BBB Boot Count',
              nodeProcess: 'any',
              dataKey: 'device_cpu_boot_count_000',
              timeDataKey: 'device_cpu_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'OBC Load',
              nodeProcess: 'any',
              dataKey: 'device_cpu_load_003',
              dataKeyUpperThreshold: 1,
              timeDataKey: 'device_cpu_utc_003',
              unit: '',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'OBC Uptime',
              nodeProcess: 'any',
              dataKey: 'device_cpu_uptime_003',
              timeDataKey: 'device_cpu_utc_003',
              unit: 's',
              processDataKey: (x) => x,
              processSecondaryData: (x) => secondsToMinute(x),
            },
            {
              name: 'OBC Boot Count',
              nodeProcess: 'any',
              dataKey: 'device_cpu_boot_count_003',
              timeDataKey: 'device_cpu_utc_003',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Downtime',
              nodeProcess: 'any',
              dataKey: 'node_downtime',
              timeDataKey: 'node_utc',
              unit: 's',
              processDataKey: (x) => x,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-cc',
      x: 6,
      y: 1,
      w: 3,
      h: 7,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Event Triggers',
          displayValues: [
            {
              name: 'Last Event',
              nodeProcess: 'any',
              dataKey: 'node_lastevent',
              timeDataKey: 'node_lasteventutc',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'BBB Uptime',
              nodeProcess: 'any',
              dataKey: 'device_cpu_uptime_000',
              timeDataKey: 'device_cpu_utc_000',
              unit: '',
              processDataKey: (x) => x,
              processSecondaryData: (x) => secondsToMinute(x),
            },
            {
              name: 'OBC Uptime',
              nodeProcess: 'any',
              dataKey: 'device_cpu_uptime_003',
              timeDataKey: 'device_cpu_utc_003',
              unit: '',
              processDataKey: (x) => x,
              processSecondaryData: (x) => secondsToMinute(x),
            },
            {
              name: 'Batt %',
              nodeProcess: 'any',
              dataKey: 'device_batt_percentage_000',
              dataKeyLowerThreshold: 0.05,
              timeDataKey: 'device_batt_utc_000',
              unit: '%',
              processDataKey: (x) => (x * 100).toFixed(4),
            },
            {
              name: 'Pwr Mode',
              nodeProcess: 'any',
              dataKey: 'node_powmode',
              timeDataKey: 'node_utc',
              unit: '',
              processDataKey: (x) => x,
              processSecondaryData: (x) => powerMode(x),
            },
            {
              name: 'EPS MB Temp',
              nodeProcess: 'any',
              dataKey: 'device_cpu_temp_001',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_cpu_utc_001',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'BATT DB 1 Temp',
              nodeProcess: 'any',
              dataKey: 'device_tsen_temp_000',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_tsen_utc_000',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-d',
      x: 9,
      y: 0,
      w: 3,
      h: 14,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Temperature',
          displayValues: [
            {
              name: 'EPS MB',
              nodeProcess: 'any',
              dataKey: 'device_cpu_temp_001',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_cpu_utc_001',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryData: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'BATT MB',
              nodeProcess: 'any',
              dataKey: 'device_batt_temp_000',
              timeDataKey: 'device_batt_utc_000',
              dataKeyUpperThreshold: 60,
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryData: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'BATT DB 1',
              nodeProcess: 'any',
              dataKey: 'device_tsen_temp_000',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_tsen_utc_000',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryData: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'BATT DB 2',
              nodeProcess: 'any',
              dataKey: 'device_tsen_temp_001',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_tsen_utc_001',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryData: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'BATT DB 3',
              nodeProcess: 'any',
              dataKey: 'device_tsen_temp_002',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_tsen_utc_002',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryData: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'BATT DB 4',
              nodeProcess: 'any',
              dataKey: 'device_tsen_temp_003',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_tsen_utc_003',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryData: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'BBB',
              nodeProcess: 'any',
              dataKey: 'device_cpu_temp_000',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_cpu_utc_000',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryData: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'OBC',
              nodeProcess: 'any',
              dataKey: 'device_cpu_temp_003',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_cpu_utc_003',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryData: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'ADCS MCU',
              nodeProcess: 'any',
              dataKey: 'device_cpu_temp_002',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_cpu_utc_002',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryData: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'ADCS Gyro X',
              nodeProcess: 'any',
              dataKey: 'device_imu_temp_000',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_imu_utc_000',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryData: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'ADCS Gyro Y',
              nodeProcess: 'any',
              dataKey: 'device_imu_temp_000',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_imu_utc_000',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryData: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'ADCS Gyro Z',
              nodeProcess: 'any',
              dataKey: 'device_imu_temp_000',
              dataKeyUpperThreshold: 60,
              timeDataKey: 'device_imu_utc_000',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-e',
      x: 3,
      y: 1,
      w: 3,
      h: 7,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'EPS',
          displayValues: [
            {
              name: 'Batt Cap',
              nodeProcess: 'any',
              dataKey: 'node_battcap',
              timeDataKey: 'node_utc',
              unit: 'Whr',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Batt %',
              nodeProcess: 'any',
              dataKey: 'device_batt_percentage_000',
              dataKeyLowerThreshold: 0.05,
              timeDataKey: 'device_batt_utc_000',
              unit: '%',
              processDataKey: (x) => (x * 100).toFixed(4),
            },
            {
              name: 'Batt V',
              nodeProcess: 'any',
              dataKey: 'device_batt_volt_000',
              timeDataKey: 'device_batt_utc_000',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Pwr Gen',
              nodeProcess: 'any',
              dataKey: 'node_powgen',
              timeDataKey: 'node_utc',
              unit: 'W',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Pwr Use',
              nodeProcess: 'any',
              dataKey: 'node_powuse',
              timeDataKey: 'node_utc',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
            },
            {
              name: 'Pwr Mode',
              nodeProcess: 'any',
              dataKey: 'node_powmode',
              timeDataKey: 'node_utc',
              unit: '',
              processDataKey: (x) => x,
              processSecondaryData: (x) => powerMode(x),
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-f',
      x: 0,
      y: 2,
      w: 12,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'CPU',
          defaultRange: 'load',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'beagle1 CPU Load',
              YDataKey: 'device_cpu_load_000',
              timeDataKey: 'device_cpu_utc_000',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'blue',
              },
              name: 'neutron1 CPU Load',
              YDataKey: 'device_cpu_load_003',
              timeDataKey: 'device_cpu_utc_003',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-default-g',
      x: 0,
      y: 3,
      w: 12,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'Thermal',
          defaultRange: 'temperature',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'darkseagreen',
              },
              name: 'Battery MB (C)',
              YDataKey: 'device_batt_temp_000',
              timeDataKey: 'device_batt_utc_000',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'blue',
              },
              name: 'Batt DB 1 (C)',
              YDataKey: 'device_tsen_temp_000',
              timeDataKey: 'device_tsen_utc_000',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'orange',
              },
              name: 'Batt DB 2 000 (C)',
              YDataKey: 'device_tsen_temp_001',
              timeDataKey: 'device_tsen_utc_001',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Batt DB 2 001 (C)',
              YDataKey: 'device_tsen_temp_002',
              timeDataKey: 'device_tsen_utc_002',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'brown',
              },
              name: 'Batt DB 2 002 (C)',
              YDataKey: 'device_tsen_temp_003',
              timeDataKey: 'device_tsen_utc_003',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'cyan',
              },
              name: 'BBB (C)',
              YDataKey: 'device_cpu_temp_000',
              timeDataKey: 'device_cpu_utc_000',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'green',
              },
              name: 'EPS DU (C)',
              YDataKey: 'device_cpu_temp_001',
              timeDataKey: 'device_cpu_utc_001',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'purple',
              },
              name: 'CubeComputer (C)',
              YDataKey: 'device_cpu_temp_002',
              timeDataKey: 'device_cpu_utc_002',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'purple',
              },
              name: 'OBC (C)',
              YDataKey: 'device_cpu_temp_003',
              timeDataKey: 'device_cpu_utc_003',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'violet',
              },
              name: 'IMU (C)',
              YDataKey: 'device_imu_temp_000',
              timeDataKey: 'device_imu_utc_000',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-h',
      x: 0,
      y: 4,
      w: 12,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS Bus Aux',
          XDataKey: 'node_utc',
          processXDataKey: (x) => mjdToUTCString(x),
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'orange',
              },
              name: 'Batt Pwr (W)',
              YDataKey: 'device_batt_power_000',
              timeDataKey: 'device_batt_utc_000',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-i',
      x: 0,
      y: 5,
      w: 12,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS Bus Pwr',
          XDataKey: 'node_utc',
          processXDataKey: (x) => mjdToUTCString(x),
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Pwr 000 (W)',
              YDataKey: 'device_bus_power_000',
              timeDataKey: 'device_bus_utc_000',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'orange',
              },
              name: 'Pwr 001 (W)',
              YDataKey: 'device_bus_power_001',
              timeDataKey: 'device_bus_utc_001',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'blue',
              },
              name: 'Pwr 002 (W)',
              YDataKey: 'device_bus_power_002',
              timeDataKey: 'device_bus_utc_002',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'gray',
              },
              name: 'Pwr 003 (W)',
              YDataKey: 'device_bus_power_003',
              timeDataKey: 'device_bus_utc_003',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'green',
              },
              name: 'Batt Percentage',
              YDataKey: 'device_batt_percentage_000',
              timeDataKey: 'device_batt_utc_000',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-l',
      x: 0,
      y: 6,
      w: 12,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS Pwr',
          XDataKey: 'node_utc',
          processXDataKey: (x) => mjdToUTCString(x),
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'green',
              },
              name: 'Pwr Generation (W)',
              YDataKey: 'node_powgen',
              timeDataKey: 'node_utc',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'blue',
              },
              name: 'Pwr Usage (W)',
              YDataKey: 'node_powuse',
              timeDataKey: 'node_utc',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-la',
      x: 0,
      y: 7,
      w: 12,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS Pwr Mode',
          showZero: true,
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'green',
              },
              name: 'Pwr Mode',
              YDataKey: 'node_powmode',
              timeDataKey: 'node_utc',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-m',
      x: 6,
      y: 8,
      w: 6,
      h: 21,
      component: {
        name: 'Attitude',
        props: {
          name: 'Attitude',
          attitudes: [
            {
              name: 'n1',
              nodeProcess: 'any',
              dataKey: 'node_loc_att_icrf',
              quaternions: {
                d: {
                  x: 0,
                  y: 0,
                  z: 0,
                },
                w: 0,
              },
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-n',
      x: 0,
      y: 8,
      w: 6,
      h: 21,
      component: {
        name: 'Globe',
        props: {
          name: 'Orbit',
          orbits: [
            {
              name: 'neutron1',
              modelFileName: 'cubesat1.glb',
              nodeProcess: 'any',
              XDataKey: 'node_loc_pos_eci',
              YDataKey: 'node_loc_pos_eci',
              ZDataKey: 'node_loc_pos_eci',
              processXDataKey: (x) => x.pos[0],
              processYDataKey: (x) => x.pos[1],
              processZDataKey: (x) => x.pos[2],
              timeDataKey: 'node_utc',
              live: true,
              position: [21.289373, 157.917480, 350000.0],
              orientation: {
                d: {
                  x: 0,
                  y: 0,
                  z: 0,
                },
                w: 0,
              },
            },
          ],
          overlays: [
            {
              color: 'CRIMSON',
              geoJson: {
                type: 'Polygon',
                coordinates: [
                  [[30, 10], [40, 40], [20, 40], [10, 20], [30, 10]],
                ],
              },
            },
          ],
        },
      },
    },
  ],
};
