import {
  powerMode,
} from '../../../utility/definition';

export default {
  lg: [
    {
      i: 'satellite-neutron1-epsbattaa',
      x: 0,
      y: 0,
      w: 3,
      h: 10,
      component: {
        name: 'Image',
        props: {
          node: 'neutron1',
          name: 'EPS Battery',
          file: 'EPS-Battery.png',
        },
      },
    },
    {
      i: 'satellite-neutron1-epsbatt-a',
      x: 3,
      y: 0,
      w: 3,
      h: 10,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'EPS Battery',
          displayValues: [
            {
              name: 'Batt Cap',
              nodeProcess: 'any',
              dataKey: 'node_battcap',
              timeDataKey: 'node_utc',
              unit: 'Whr',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Batt %',
              nodeProcess: 'any',
              dataKey: 'device_batt_percentage_000',
              dataKeyLowerThreshold: 0.05,
              timeDataKey: 'device_batt_utc_000',
              unit: '%',
              processDataKey: (x) => (x * 100).toFixed(4),
            },
            {
              name: 'Pwr Gen',
              nodeProcess: 'any',
              timeDataKey: 'node_utc',
              dataKey: 'node_powgen',
              unit: 'W',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Pwr Use',
              nodeProcess: 'any',
              timeDataKey: 'node_utc',
              dataKey: 'node_powuse',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
            },
            {
              name: 'Pwr Mode',
              nodeProcess: 'any',
              timeDataKey: 'node_utc',
              dataKey: 'node_powmode',
              unit: '',
              processDataKey: (x) => x,
              processSecondaryData: (x) => powerMode(x),
            },
            {
              name: 'Pwr Mode #',
              nodeProcess: 'any',
              timeDataKey: 'node_utc',
              dataKey: 'node_powmode',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Batt Temp',
              nodeProcess: 'any',
              dataKey: 'device_batt_temp_000',
              timeDataKey: 'device_batt_utc_000',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'Batt V',
              nodeProcess: 'any',
              dataKey: 'device_batt_volt_000',
              timeDataKey: 'node_utc',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Batt Current',
              nodeProcess: 'any',
              dataKey: 'device_batt_amp_000',
              timeDataKey: 'node_utc',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsbatt-b',
      x: 6,
      y: 0,
      w: 3,
      h: 10,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Battery Temperature',
          displayValues: [
            {
              name: 'Motherboard',
              nodeProcess: 'any',
              dataKey: 'device_batt_temp_000',
              timeDataKey: 'device_batt_utc_000',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
              live: true,
            },
            {
              name: 'Daughterboard 1',
              nodeProcess: 'any',
              dataKey: 'device_tsen_temp_000',
              timeDataKey: 'device_tsen_utc_000',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
              live: true,
            },
            {
              name: 'Daughterboard 2',
              nodeProcess: 'any',
              dataKey: 'device_tsen_temp_001',
              timeDataKey: 'device_tsen_utc_001',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
              live: true,
            },
            {
              name: 'Daughterboard 2',
              nodeProcess: 'any',
              dataKey: 'device_tsen_temp_002',
              timeDataKey: 'device_tsen_utc_002',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
              live: true,
            },
            {
              name: 'Daughterboard 2',
              nodeProcess: 'any',
              dataKey: 'device_tsen_temp_003',
              timeDataKey: 'device_tsen_utc_003',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsbatt-bc',
      x: 9,
      y: 0,
      w: 3,
      h: 10,
      component: {
        name: 'DisplayValue',
        props: {
          name: ' Battery Current & Voltage',
          displayValues: [
            {
              name: '3V Current Draw',
              nodeProcess: 'any',
              dataKey: 'device_bus_amp_000',
              timeDataKey: 'device_bus_utc_000',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
            {
              name: '5V Voltage Output',
              nodeProcess: 'any',
              dataKey: 'device_bus_volt_000',
              timeDataKey: 'device_bus_utc_000',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
            {
              name: '3V Current Draw',
              nodeProcess: 'any',
              dataKey: 'device_bus_amp_001',
              timeDataKey: 'device_bus_utc_001',
              unit: 'A',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
              live: true,
            },
            {
              name: '5V Voltage Output',
              nodeProcess: 'any',
              dataKey: 'device_bus_volt_001',
              timeDataKey: 'device_bus_utc_001',
              unit: 'V',
              processDataKey: (x) => x.toFixed(2),
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsbatt-c',
      x: 0,
      y: 1,
      w: 6,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'Battery Temperature',
          defaultRange: 'temperature',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Motherboard (C)',
              YDataKey: 'device_batt_temp_000',
              timeDataKey: 'device_batt_utc_000',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'orange',
              },
              name: 'Daughterboard 1 000 (C)',
              YDataKey: 'device_tsen_temp_000',
              timeDataKey: 'device_tsen_utc_000',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'blue',
              },
              name: 'Daughterboard 2 001 (C)',
              YDataKey: 'device_tsen_temp_001',
              timeDataKey: 'device_tsen_utc_001',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'gray',
              },
              name: 'Daughterboard 2 002 (C)',
              YDataKey: 'device_tsen_temp_002',
              timeDataKey: 'device_tsen_utc_002',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'purple',
              },
              name: 'Daughterboard 2 003 (C)',
              YDataKey: 'device_tsen_temp_003',
              timeDataKey: 'device_tsen_utc_003',
              processYDataKey: (x) => (x - 273.15).toFixed(2),
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsbatt-cc',
      x: 6,
      y: 1,
      w: 6,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'Battery Percentage',
          defaultRange: 'percentage',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Batt %',
              YDataKey: 'device_batt_percentage_000',
              timeDataKey: 'device_batt_utc_000',
              processYDataKey: (x) => (x * 100).toFixed(4),
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsbatt-d',
      x: 0,
      y: 2,
      w: 6,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS Battery Current',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Batt Amperage (A)',
              YDataKey: 'device_batt_amp_000',
              timeDataKey: 'device_batt_utc_000',
              processYDataKey: (x) => Math.abs(x.toFixed(4)),
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsbatt-e',
      x: 6,
      y: 2,
      w: 6,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS Batt V',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Batt Voltage (V)',
              YDataKey: 'device_batt_volt_000',
              timeDataKey: 'device_batt_utc_000',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-epsbatt-f',
      x: 0,
      y: 3,
      w: 12,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'EPS Power',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Batt Pwr (W)',
              YDataKey: 'device_batt_power_000',
              timeDataKey: 'device_batt_utc_000',
              processYDataKey: (x) => Math.abs(x.toFixed(2)),
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
  ],
};
