import {
  secondsToMinute,
  mjdToUTCString,
} from '../../../utility/time';

import {
  callConnected,
  callType,
  callState,
  globeFunction,
  registration,
  roaming,
  serviceAvailable,
  serviceMode,
  serviceReady,
} from '../../../utility/definition';

export default {
  lg: [
    {
      i: 'satellite-neutron1-duplex-a',
      x: 0,
      y: 0,
      w: 3,
      h: 12,
      component: {
        name: 'Image',
        props: {
          node: 'neutron1',
          name: 'Duplex Radio',
          file: 'Duplex-Radio.png',
        },
      },
    },
    {
      i: 'satellite-neutron1-duplex-c',
      x: 3,
      y: 0,
      w: 3,
      h: 12,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Duplex Data',
          displayValues: [
            {
              name: 'PPP Link',
              nodeProcess: 'any',
              dataKey: 'device_tcv_rxutc_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => mjdToUTCString(x),
            },
            {
              name: 'Last Time RX',
              nodeProcess: 'any',
              dataKey: 'device_tcv_rxutc_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => mjdToUTCString(x),
            },
            {
              name: 'Last Time TX',
              nodeProcess: 'any',
              dataKey: 'device_tcv_txutc_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => mjdToUTCString(x),
            },
            {
              name: 'Last Packet RX',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'device_gps_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Last Packet TX',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'device_gps_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Packet Size',
              nodeProcess: 'any',
              dataKey: 'device_tcv_pktsize_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-duplex-g',
      x: 6,
      y: 0,
      w: 3,
      h: 12,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Service Status',
          displayValues: [
            {
              name: 'Transceiver Flag',
              nodeProcess: 'any',
              dataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Call Connected',
              nodeProcess: 'any',
              dataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => callConnected(x),
            },
            {
              name: 'Service Available',
              nodeProcess: 'any',
              dataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => serviceAvailable(x),
            },
            {
              name: 'Service Mode',
              nodeProcess: 'any',
              dataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => serviceMode(x),
            },
            {
              name: 'Provider',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Gateway',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Signal Strength',
              nodeProcess: 'any',
              dataKey: 'device_tcv_rssi_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Registration',
              nodeProcess: 'any',
              dataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => registration(x),
            },
            {
              name: 'Roaming',
              nodeProcess: 'any',
              dataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => roaming(x),
            },
            {
              name: 'Call State',
              nodeProcess: 'any',
              dataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => callState(x),
            },
            {
              name: 'Call Type',
              nodeProcess: 'any',
              dataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => callType(x),
            },
            {
              name: 'Call Duration',
              nodeProcess: 'any',
              dataKey: 'device_tcv_uptime_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Call Number',
              nodeProcess: 'any',
              dataKey: 'device_tcv_uptime_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Service Ready',
              nodeProcess: 'any',
              dataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => serviceReady(x),
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-duplex-b',
      x: 9,
      y: 0,
      w: 3,
      h: 6,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Duplex Status',
          displayValues: [
            {
              name: 'Pwr Mode',
              nodeProcess: 'any',
              dataKey: 'device_swch_volt_004',
              timeDataKey: 'device_swch_utc_000',
              unit: '',
              processDataKey: (x) => {
                if (x < 4) {
                  return 'Off';
                }
                return 'On';
              },
            },
            {
              name: 'Uptime',
              nodeProcess: 'any',
              dataKey: 'device_gps_uptime_000',
              timeDataKey: 'device_gps_utc_000',
              unit: '',
              processDataKey: (x) => secondsToMinute(x.h),
            },
            {
              name: 'Phone Number',
              nodeProcess: 'any',
              dataKey: 'device_gps_geods_000',
              timeDataKey: 'device_gps_utc_000',
              unit: 'm',
              processDataKey: (x) => x.h,
            },
            {
              name: 'ESN',
              nodeProcess: 'any',
              dataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Time of Day',
              nodeProcess: 'any',
              dataKey: 'device_gps_utc_000',
              timeDataKey: 'device_gps_utc_000',
              unit: '',
              processDataKey: (x) => mjdToUTCString(x),
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-duplex-d',
      x: 9,
      y: 1,
      w: 3,
      h: 6,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Position Location Service',
          displayValues: [
            {
              name: 'Time of Position',
              nodeProcess: 'any',
              dataKey: 'device_gps_utc_000',
              timeDataKey: 'device_gps_utc_000',
              unit: '',
              processDataKey: (x) => mjdToUTCString(x),
            },
            {
              name: 'Latitude',
              nodeProcess: 'any',
              dataKey: 'device_gps_geods_000',
              timeDataKey: 'device_gps_utc_000',
              unit: '°',
              processDataKey: (x) => (x.lat * (180 / Math.PI)).toFixed(5),
            },
            {
              name: 'Longitude',
              nodeProcess: 'any',
              dataKey: 'device_gps_geods_000',
              timeDataKey: 'device_gps_utc_000',
              unit: '°',
              processDataKey: (x) => (x.lon * (180 / Math.PI)).toFixed(5),
            },
            {
              name: 'Altitude',
              nodeProcess: 'any',
              dataKey: 'device_gps_geods_000',
              timeDataKey: 'device_gps_utc_000',
              unit: 'm',
              processDataKey: (x) => x.h,
            },
            {
              name: 'Position Error',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'device_gps_utc_000',
              unit: '',
              processDataKey: (x) => mjdToUTCString(x),
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-duplex-e',
      x: 0,
      y: 3,
      w: 6,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'Uptime',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Uptime',
              YDataKey: 'device_gps_uptime_000',
              timeDataKey: 'device_gps_utc_000',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-dpr-f',
      x: 6,
      y: 2,
      w: 6,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'RSSI Strength',
          showZero: true,
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'RSSI Strength',
              YDataKey: 'device_tcv_rssi_000',
              timeDataKey: 'device_tcv_utc_000',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-dpr-i',
      x: 0,
      y: 3,
      w: 6,
      h: 18,
      component: {
        name: 'Chart',
        props: {
          name: 'Service Statuses',
          plots: [
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'red',
              },
              name: 'Service Mode',
              YDataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              processYDataKey: (x) => x >> 8 & 0x4,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'orange',
              },
              name: 'Registration',
              YDataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              processYDataKey: (x) => x >> 3 & 1,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'green',
              },
              name: 'Gateway',
              YDataKey: 'placeholder',
              timeDataKey: 'device_gps_utc_000',
              processYDataKey: (x) => x,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'blue',
              },
              name: 'Call State',
              YDataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              processYDataKey: (x) => x >> 12 & 0x4,
              nodeProcess: 'any',
              live: true,
            },
            {
              x: [],
              y: [],
              type: 'scatter',
              mode: 'lines+markers',
              marker: {
                color: 'purple',
              },
              name: 'Service Ready',
              YDataKey: 'device_tcv_flag_000',
              timeDataKey: 'device_tcv_utc_000',
              processYDataKey: (x) => x >> 1 & 1,
              nodeProcess: 'any',
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-duplex-j',
      x: 6,
      y: 3,
      w: 6,
      h: 18,
      component: {
        name: 'Globe',
        props: {
          name: 'Orbit',
          orbits: [
            {
              name: 'neutron1',
              modelFileName: 'cubesat1.glb',
              nodeProcess: 'any',
              XDataKey: 'device_gps_geods_000',
              YDataKey: 'device_gps_geods_000',
              ZDataKey: 'device_gps_geods_000',
              processXDataKey: ({ lat, lon }) => globeFunction(lat, lon),
              processYDataKey: ({ lat, lon, h }) => globeFunction(lat, lon, h),
              processZDataKey: ({ lat, h }) => globeFunction(lat, null, h),
              timeDataKey: 'device_gps_utc_000',
              live: true,
              position: [21.289373, 157.917480, 350000.0],
              orientation: {
                d: {
                  x: 0,
                  y: 0,
                  z: 0,
                },
                w: 0,
              },
            },
          ],
        },
      },
    },
  ],
};
