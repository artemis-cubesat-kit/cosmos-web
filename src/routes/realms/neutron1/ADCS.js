import {
  secondsToMinute,
  mjdToUTCString,
} from '../../../utility/time';

export default {
  lg: [
    {
      i: 'satellite-neutron1-adcs-a',
      x: 0,
      y: 0,
      w: 3,
      h: 12,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'ADCS Status',
          displayValues: [
            {
              name: 'Boot Index & Status',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Cache Enabled State',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Boot & Running Program Status',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'CubeACP State',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Current UNIX Time',
              nodeProcess: 'any',
              dataKey: 'device_imu_utc_000',
              timeDataKey: 'device_imu_utc_000',
              unit: '',
              processDataKey: (x) => mjdToUTCString(x),
            },
            {
              name: 'Last Logged Event',
              nodeProcess: 'any',
              dataKey: 'event_utc_000',
              timeDataKey: 'device_imu_utc_000',
              unit: '',
              processDataKey: (x) => mjdToUTCString(x),
            },
            {
              name: 'SRAM Latchup Counters',
              nodeProcess: 'any',
              dataKey: 'placeholders',
              timeDataKey: 'placeholders',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'EDAC Error Counters',
              nodeProcess: 'any',
              dataKey: 'placeholders',
              timeDataKey: 'placeholders',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Communication Status',
              nodeProcess: 'any',
              dataKey: 'placeholders',
              timeDataKey: 'placeholders',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'ADCS State',
              nodeProcess: 'any',
              dataKey: 'placeholders',
              timeDataKey: 'placeholders',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'ADCS Configuration',
              nodeProcess: 'any',
              dataKey: 'placeholders',
              timeDataKey: 'placeholders',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'SGP4 Orbit Parameters',
              nodeProcess: 'any',
              dataKey: 'placeholders',
              timeDataKey: 'placeholders',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Actuator Commands',
              nodeProcess: 'any',
              dataKey: 'placeholders',
              timeDataKey: 'placeholders',
              unit: '',
              processDataKey: (x) => x,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-b',
      x: 3,
      y: 0,
      w: 3,
      h: 6,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'CPU',
          displayValues: [
            {
              name: 'Temperature',
              nodeProcess: 'any',
              dataKey: 'device_cpu_temp_002',
              timeDataKey: 'device_cpu_utc_002',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'CPU Pwr',
              nodeProcess: 'any',
              dataKey: 'device_cpu_power_002',
              timeDataKey: 'device_cpu_utc_002',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
            },
            {
              name: 'Reaction Wheel Pwr',
              nodeProcess: 'any',
              dataKey: 'device_rw_power_002',
              timeDataKey: 'device_rw_utc_002',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
            },
            {
              name: 'Load',
              nodeProcess: 'any',
              dataKey: 'device_cpu_load_002',
              timeDataKey: 'device_cpu_utc_002',
              unit: '',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Uptime',
              nodeProcess: 'any',
              dataKey: 'device_cpu_uptime_002',
              timeDataKey: 'device_cpu_utc_002',
              unit: '',
              processDataKey: (x) => secondsToMinute(x),
            },
            {
              name: 'Boot Count',
              nodeProcess: 'any',
              dataKey: 'device_cpu_boot_count_002',
              timeDataKey: 'device_cpu_utc_002',
              unit: '',
              processDataKey: (x) => x.toFixed(2),
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-c',
      x: 6,
      y: 0,
      w: 3,
      h: 12,
      component: {
        name: 'Image',
        props: {
          node: 'neutron1',
          file: 'ADCS-1.png',
          name: 'ADCS-1',
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-d',
      x: 9,
      y: 0,
      w: 3,
      h: 12,
      component: {
        name: 'Image',
        props: {
          node: 'neutron1',
          file: 'ADCS-2.png',
          name: 'ADCS-2',
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-e',
      x: 3,
      y: 1,
      w: 3,
      h: 6,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'State Estimate',
          displayValues: [
            {
              name: 'Estimated Attitude Angles',
              nodeProcess: 'any',
              dataKey: 'device_imu_euler_000',
              timeDataKey: 'device_imu_utc_000',
              unit: 'rad',
              processDataKey: (x) => JSON.stringify(x),
            },
            {
              name: 'Estimated Angular Rates',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Satellite Position (ECI)',
              nodeProcess: 'any',
              dataKey: 'device_gps_geocs_000',
              timeDataKey: 'device_imu_utc_000',
              unit: 'km',
              processDataKey: (x) => JSON.stringify(x),
            },
            {
              name: 'Satellite Velocity (ECI)',
              nodeProcess: 'any',
              dataKey: 'device_gps_dgeocs_000',
              timeDataKey: 'device_imu_utc_000',
              unit: 'm/s',
              processDataKey: (x) => JSON.stringify(x),
            },
            {
              name: 'Satellite Position (LLH)',
              nodeProcess: 'any',
              dataKey: 'device_gps_geods_000',
              timeDataKey: 'device_imu_utc_000',
              unit: 'km',
              processDataKey: (x) => JSON.stringify(x),
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-f',
      x: 0,
      y: 2,
      w: 3,
      h: 11,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Actuator Status',
          displayValues: [
            {
              name: 'Reaction Wheel Speed X',
              nodeProcess: 'any',
              dataKey: 'device_rw_omega_000',
              timeDataKey: 'device_rw_utc_000',
              unit: 'rpm',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Reaction Wheel Speed Y',
              nodeProcess: 'any',
              dataKey: 'device_rw_omega_001',
              timeDataKey: 'device_rw_utc_001',
              unit: 'rpm',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Reaction Wheel Speed Z',
              nodeProcess: 'any',
              dataKey: 'device_rw_omega_002',
              timeDataKey: 'device_rw_utc_002',
              unit: 'rpm',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Requested Reaction Wheel X Speed',
              nodeProcess: 'any',
              dataKey: 'device_rw_romg_000',
              timeDataKey: 'device_rw_utc_000',
              unit: 'rpm',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Requested Reaction Wheel Y Speed',
              nodeProcess: 'any',
              dataKey: 'device_rw_romg_001',
              timeDataKey: 'device_rw_utc_001',
              unit: 'rpm',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Requested Wheel Z Speed',
              nodeProcess: 'any',
              dataKey: 'device_rw_romg_002',
              timeDataKey: 'device_rw_utc_002',
              unit: 'rpm',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'X Magnetorquer Command',
              nodeProcess: 'any',
              dataKey: 'device_mtr_mom_000',
              timeDataKey: 'device_mtr_utc_000',
              unit: 's',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Y Magnetorquer Command',
              nodeProcess: 'any',
              dataKey: 'device_mtr_mom_001',
              timeDataKey: 'device_mtr_utc_001',
              unit: 's',
              processDataKey: (x) => x.toFixed(2),
            },
            {
              name: 'Z Magnetorquer Command',
              nodeProcess: 'any',
              dataKey: 'device_mtr_mom_002',
              timeDataKey: 'device_mtr_utc_002',
              unit: 's',
              processDataKey: (x) => x.toFixed(2),
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-j',
      x: 3,
      y: 2,
      w: 3,
      h: 11,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Pwr',
          displayValues: [
            {
              name: 'CubeSense 3V3 Current',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
            },
            {
              name: 'CubeSense Cam2 SRAM Current',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => Math.abs(x.toFixed(4)),
            },
            {
              name: 'X Reaction Wheel Pwr',
              nodeProcess: 'any',
              timeDataKey: 'device_rw_utc_000',
              dataKey: 'device_rw_power_000',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
            },
            {
              name: 'Y Reaction Wheel Pwr',
              nodeProcess: 'any',
              timeDataKey: 'device_rw_utc_001',
              dataKey: 'device_rw_power_001',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
            },
            {
              name: 'Z Reaction Wheel Pwr',
              nodeProcess: 'any',
              dataKey: 'device_rw_power_002',
              timeDataKey: 'device_rw_utc_002',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
            },
            {
              name: 'X Magnetorquer Pwr',
              nodeProcess: 'any',
              dataKey: 'device_mtr_power_000',
              timeDataKey: 'device_mtr_utc_000',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
            },
            {
              name: 'Y Magnetorquer Pwr',
              nodeProcess: 'any',
              dataKey: 'device_mtr_power_001',
              timeDataKey: 'device_mtr_utc_001',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
            },
            {
              name: 'Z Magnetorquer Pwr',
              nodeProcess: 'any',
              dataKey: 'device_mtr_power_002',
              timeDataKey: 'device_mtr_utc_002',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
            },
            {
              name: 'ADCS Execution Time',
              nodeProcess: 'any',
              dataKey: 'device_imu_alpha_000',
              timeDataKey: 'device_imu_utc_000',
              unit: '',
              processDataKey: (x) => JSON.stringify(x),
            },
            {
              name: 'Pwr',
              nodeProcess: 'any',
              dataKey: 'device_imu_power_000',
              timeDataKey: 'device_imu_utc_000',
              unit: 'W',
              processDataKey: (x) => Math.abs(x.toFixed(2)),
            },
            {
              name: 'Pwr Control',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-k',
      x: 6,
      y: 3,
      w: 3,
      h: 11,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Temperature',
          displayValues: [
            {
              name: 'MCU',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'Magnetometer',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'X-Rate Sensor',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'Y-Rate Sensor',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'Z-Rate Sensor',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
            },
            {
              name: 'IMU',
              nodeProcess: 'any',
              dataKey: 'device_imu_temp_000',
              timeDataKey: 'device_imu_utc_000',
              unit: 'C',
              processDataKey: (x) => (x - 273.15).toFixed(2),
              processSecondaryDataKey: (x) => `${x.toFixed(2)}K`,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-l',
      x: 9,
      y: 3,
      w: 3,
      h: 11,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Sensor Measurements',
          displayValues: [
            {
              name: 'ADCS Measurements',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Fine Estimated Angular Rates',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'ACP Execution State',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Status of Image Cpature & Save Operation',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-i',
      x: 0,
      y: 3,
      w: 2,
      h: 8,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Sensor Status',
          displayValues: [
            {
              name: 'Magnetic Field Vector',
              nodeProcess: 'any',
              dataKey: 'device_imu_mag_000',
              timeDataKey: 'device_imu_utc_000',
              unit: 'uT',
              processDataKey: (x) => JSON.stringify(x),
            },
            {
              name: 'Course Sun Sensor',
              nodeProcess: 'any',
              dataKey: 'device_ssen_000',
              timeDataKey: 'device_imu_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Fine Sun Sensor',
              nodeProcess: 'any',
              dataKey: 'device_ssen_001',
              timeDataKey: 'device_imu_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Nadir Vector',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'device_imu_utc_000',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Rate Sensor Rates',
              nodeProcess: 'any',
              dataKey: 'device_imu_omega_000',
              timeDataKey: 'device_imu_utc_000',
              unit: 'rad/s',
              processDataKey: (x) => JSON.stringify(x),
            },
            {
              name: 'Estimated Quaternion',
              nodeProcess: 'any',
              dataKey: 'device_imu_theta_000',
              timeDataKey: 'device_imu_utc_000',
              unit: '',
              processDataKey: (x) => JSON.stringify(x),
            },
            {
              name: 'ECEF Position',
              nodeProcess: 'any',
              dataKey: 'device_gps_geods_000',
              timeDataKey: 'device_imu_utc_000',
              unit: '',
              processDataKey: (x) => JSON.stringify(x),
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-m',
      x: 2,
      y: 3,
      w: 2,
      h: 8,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Raw GPS',
          displayValues: [
            {
              name: 'Status',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'Time',
              nodeProcess: 'any',
              dataKey: 'device_gps_utc_001',
              timeDataKey: 'device_gps_utc_000',
              unit: '',
              processDataKey: (x) => mjdToUTCString(x),
            },
            {
              name: 'X, Y, Z',
              nodeProcess: 'any',
              dataKey: 'device_gps_geods_000',
              timeDataKey: 'device_gps_geocs_000',
              unit: '',
              processDataKey: (x) => JSON.stringify(x),
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-p',
      x: 4,
      y: 3,
      w: 2,
      h: 8,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'File & Estimator Status',
          displayValues: [
            {
              name: 'Estimation Data',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'File Information',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-n',
      x: 6,
      y: 3,
      w: 3,
      h: 8,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Fine Sun Sensor',
          displayValues: [
            {
              name: 'Position',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: 'm',
              processDataKey: (x) => JSON.parse(x),
            },
            {
              name: 'Detection Result',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => JSON.parse(x),
            },
            {
              name: 'FSS 0',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'FSS 1',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'FSS 2',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'FSS 3',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'FSS 4',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'FSS 5',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'FSS 6',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'FSS 7',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'FSS 8',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'FSS 9',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'FSS 10',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-o',
      x: 9,
      y: 3,
      w: 3,
      h: 8,
      component: {
        name: 'DisplayValue',
        props: {
          name: 'Coarse Sun Sensor',
          displayValues: [
            {
              name: 'Position',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: 'm',
              processDataKey: (x) => JSON.parse(x),
            },
            {
              name: 'Detection Result',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => JSON.parse(x),
            },
            {
              name: 'CSS 0',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'CSS 1',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'CSS 2',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'CSS 3',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'CSS 4',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'CSS 5',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'CSS 6',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'CSS 7',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'CSS 8',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'CSS 9',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
            {
              name: 'CSS 10',
              nodeProcess: 'any',
              dataKey: 'placeholder',
              timeDataKey: 'placeholder',
              unit: '',
              processDataKey: (x) => x,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-q',
      x: 6,
      y: 5,
      w: 6,
      h: 21,
      component: {
        name: 'Attitude',
        props: {
          name: 'Attitude',
          attitudes: [
            {
              name: 'n1',
              nodeProcess: 'any',
              dataKey: 'node_loc_att_icrf',
              quaternions: {
                d: {
                  x: 0,
                  y: 0,
                  z: 0,
                },
                w: 0,
              },
              live: true,
            },
          ],
        },
      },
    },
    {
      i: 'satellite-neutron1-adcs-r',
      x: 0,
      y: 5,
      w: 6,
      h: 21,
      component: {
        name: 'Globe',
        props: {
          name: 'Orbit',
          orbits: [
            {
              name: 'neutron1',
              modelFileName: 'cubesat1.glb',
              nodeProcess: 'any',
              XDataKey: 'node_loc_pos_eci',
              YDataKey: 'node_loc_pos_eci',
              ZDataKey: 'node_loc_pos_eci',
              processXDataKey: (x) => x.pos[0],
              processYDataKey: (x) => x.pos[1],
              processZDataKey: (x) => x.pos[2],
              timeDataKey: 'node_utc',
              live: true,
              position: [21.289373, 157.917480, 350000.0],
              orientation: {
                d: {
                  x: 0,
                  y: 0,
                  z: 0,
                },
                w: 0,
              },
            },
          ],
          overlays: [
            {
              color: 'CRIMSON',
              geoJson: {
                type: 'Polygon',
                coordinates: [
                  [[30, 10], [40, 40], [20, 40], [10, 20], [30, 10]],
                ],
              },
            },
          ],
        },
      },
    },
  ],
};
